package github_event

import (
	"encoding/json"
	"os"
	"time"
)

type Event struct {
	Action       string `json:"action"`
	After        string `json:"after"`
	Before       string `json:"before"`
	Number       int    `json:"number"`
	Organization *struct {
		AvatarURL        string `json:"avatar_url"`
		Description      string `json:"description"`
		EventsURL        string `json:"events_url"`
		HooksURL         string `json:"hooks_url"`
		ID               int    `json:"id"`
		IssuesURL        string `json:"issues_url"`
		Login            string `json:"login"`
		MembersURL       string `json:"members_url"`
		NodeID           string `json:"node_id"`
		PublicMembersURL string `json:"public_members_url"`
		ReposURL         string `json:"repos_url"`
		URL              string `json:"url"`
	} `json:"organization"`
	PullRequest *struct {
		ActiveLockReason  interface{}   `json:"active_lock_reason"`
		Additions         int           `json:"additions"`
		Assignee          interface{}   `json:"assignee"`
		Assignees         []interface{} `json:"assignees"`
		AuthorAssociation string        `json:"author_association"`
		AutoMerge         interface{}   `json:"auto_merge"`
		Base              *struct {
			Label string `json:"label"`
			Ref   string `json:"ref"`
			Repo  struct {
				AllowAutoMerge      bool      `json:"allow_auto_merge"`
				AllowForking        bool      `json:"allow_forking"`
				AllowMergeCommit    bool      `json:"allow_merge_commit"`
				AllowRebaseMerge    bool      `json:"allow_rebase_merge"`
				AllowSquashMerge    bool      `json:"allow_squash_merge"`
				AllowUpdateBranch   bool      `json:"allow_update_branch"`
				ArchiveURL          string    `json:"archive_url"`
				Archived            bool      `json:"archived"`
				AssigneesURL        string    `json:"assignees_url"`
				BlobsURL            string    `json:"blobs_url"`
				BranchesURL         string    `json:"branches_url"`
				CloneURL            string    `json:"clone_url"`
				CollaboratorsURL    string    `json:"collaborators_url"`
				CommentsURL         string    `json:"comments_url"`
				CommitsURL          string    `json:"commits_url"`
				CompareURL          string    `json:"compare_url"`
				ContentsURL         string    `json:"contents_url"`
				ContributorsURL     string    `json:"contributors_url"`
				CreatedAt           time.Time `json:"created_at"`
				DefaultBranch       string    `json:"default_branch"`
				DeleteBranchOnMerge bool      `json:"delete_branch_on_merge"`
				DeploymentsURL      string    `json:"deployments_url"`
				Description         string    `json:"description"`
				Disabled            bool      `json:"disabled"`
				DownloadsURL        string    `json:"downloads_url"`
				EventsURL           string    `json:"events_url"`
				Fork                bool      `json:"fork"`
				Forks               int       `json:"forks"`
				ForksCount          int       `json:"forks_count"`
				ForksURL            string    `json:"forks_url"`
				FullName            string    `json:"full_name"`
				GitCommitsURL       string    `json:"git_commits_url"`
				GitRefsURL          string    `json:"git_refs_url"`
				GitTagsURL          string    `json:"git_tags_url"`
				GitURL              string    `json:"git_url"`
				HasDiscussions      bool      `json:"has_discussions"`
				HasDownloads        bool      `json:"has_downloads"`
				HasIssues           bool      `json:"has_issues"`
				HasPages            bool      `json:"has_pages"`
				HasProjects         bool      `json:"has_projects"`
				HasWiki             bool      `json:"has_wiki"`
				Homepage            string    `json:"homepage"`
				HooksURL            string    `json:"hooks_url"`
				HTMLURL             string    `json:"html_url"`
				ID                  int       `json:"id"`
				IsTemplate          bool      `json:"is_template"`
				IssueCommentURL     string    `json:"issue_comment_url"`
				IssueEventsURL      string    `json:"issue_events_url"`
				IssuesURL           string    `json:"issues_url"`
				KeysURL             string    `json:"keys_url"`
				LabelsURL           string    `json:"labels_url"`
				Language            string    `json:"language"`
				LanguagesURL        string    `json:"languages_url"`
				License             struct {
					Key    string `json:"key"`
					Name   string `json:"name"`
					NodeID string `json:"node_id"`
					SpdxID string `json:"spdx_id"`
					URL    string `json:"url"`
				} `json:"license"`
				MergeCommitMessage string      `json:"merge_commit_message"`
				MergeCommitTitle   string      `json:"merge_commit_title"`
				MergesURL          string      `json:"merges_url"`
				MilestonesURL      string      `json:"milestones_url"`
				MirrorURL          interface{} `json:"mirror_url"`
				Name               string      `json:"name"`
				NodeID             string      `json:"node_id"`
				NotificationsURL   string      `json:"notifications_url"`
				OpenIssues         int         `json:"open_issues"`
				OpenIssuesCount    int         `json:"open_issues_count"`
				Owner              struct {
					AvatarURL         string `json:"avatar_url"`
					EventsURL         string `json:"events_url"`
					FollowersURL      string `json:"followers_url"`
					FollowingURL      string `json:"following_url"`
					GistsURL          string `json:"gists_url"`
					GravatarID        string `json:"gravatar_id"`
					HTMLURL           string `json:"html_url"`
					ID                int    `json:"id"`
					Login             string `json:"login"`
					NodeID            string `json:"node_id"`
					OrganizationsURL  string `json:"organizations_url"`
					ReceivedEventsURL string `json:"received_events_url"`
					ReposURL          string `json:"repos_url"`
					SiteAdmin         bool   `json:"site_admin"`
					StarredURL        string `json:"starred_url"`
					SubscriptionsURL  string `json:"subscriptions_url"`
					Type              string `json:"type"`
					URL               string `json:"url"`
				} `json:"owner"`
				Private                   bool          `json:"private"`
				PullsURL                  string        `json:"pulls_url"`
				PushedAt                  time.Time     `json:"pushed_at"`
				ReleasesURL               string        `json:"releases_url"`
				Size                      int           `json:"size"`
				SquashMergeCommitMessage  string        `json:"squash_merge_commit_message"`
				SquashMergeCommitTitle    string        `json:"squash_merge_commit_title"`
				SSHURL                    string        `json:"ssh_url"`
				StargazersCount           int           `json:"stargazers_count"`
				StargazersURL             string        `json:"stargazers_url"`
				StatusesURL               string        `json:"statuses_url"`
				SubscribersURL            string        `json:"subscribers_url"`
				SubscriptionURL           string        `json:"subscription_url"`
				SvnURL                    string        `json:"svn_url"`
				TagsURL                   string        `json:"tags_url"`
				TeamsURL                  string        `json:"teams_url"`
				Topics                    []interface{} `json:"topics"`
				TreesURL                  string        `json:"trees_url"`
				UpdatedAt                 time.Time     `json:"updated_at"`
				URL                       string        `json:"url"`
				UseSquashPrTitleAsDefault bool          `json:"use_squash_pr_title_as_default"`
				Visibility                string        `json:"visibility"`
				Watchers                  int           `json:"watchers"`
				WatchersCount             int           `json:"watchers_count"`
				WebCommitSignoffRequired  bool          `json:"web_commit_signoff_required"`
			} `json:"repo"`
			Sha  string `json:"sha"`
			User struct {
				AvatarURL         string `json:"avatar_url"`
				EventsURL         string `json:"events_url"`
				FollowersURL      string `json:"followers_url"`
				FollowingURL      string `json:"following_url"`
				GistsURL          string `json:"gists_url"`
				GravatarID        string `json:"gravatar_id"`
				HTMLURL           string `json:"html_url"`
				ID                int    `json:"id"`
				Login             string `json:"login"`
				NodeID            string `json:"node_id"`
				OrganizationsURL  string `json:"organizations_url"`
				ReceivedEventsURL string `json:"received_events_url"`
				ReposURL          string `json:"repos_url"`
				SiteAdmin         bool   `json:"site_admin"`
				StarredURL        string `json:"starred_url"`
				SubscriptionsURL  string `json:"subscriptions_url"`
				Type              string `json:"type"`
				URL               string `json:"url"`
			} `json:"user"`
		} `json:"base"`
		Body         interface{} `json:"body"`
		ChangedFiles int         `json:"changed_files"`
		ClosedAt     interface{} `json:"closed_at"`
		Comments     int         `json:"comments"`
		CommentsURL  string      `json:"comments_url"`
		Commits      int         `json:"commits"`
		CommitsURL   string      `json:"commits_url"`
		CreatedAt    time.Time   `json:"created_at"`
		Deletions    int         `json:"deletions"`
		DiffURL      string      `json:"diff_url"`
		Draft        bool        `json:"draft"`
		Head         *struct {
			Label string `json:"label"`
			Ref   string `json:"ref"`
			Repo  struct {
				AllowAutoMerge      bool      `json:"allow_auto_merge"`
				AllowForking        bool      `json:"allow_forking"`
				AllowMergeCommit    bool      `json:"allow_merge_commit"`
				AllowRebaseMerge    bool      `json:"allow_rebase_merge"`
				AllowSquashMerge    bool      `json:"allow_squash_merge"`
				AllowUpdateBranch   bool      `json:"allow_update_branch"`
				ArchiveURL          string    `json:"archive_url"`
				Archived            bool      `json:"archived"`
				AssigneesURL        string    `json:"assignees_url"`
				BlobsURL            string    `json:"blobs_url"`
				BranchesURL         string    `json:"branches_url"`
				CloneURL            string    `json:"clone_url"`
				CollaboratorsURL    string    `json:"collaborators_url"`
				CommentsURL         string    `json:"comments_url"`
				CommitsURL          string    `json:"commits_url"`
				CompareURL          string    `json:"compare_url"`
				ContentsURL         string    `json:"contents_url"`
				ContributorsURL     string    `json:"contributors_url"`
				CreatedAt           time.Time `json:"created_at"`
				DefaultBranch       string    `json:"default_branch"`
				DeleteBranchOnMerge bool      `json:"delete_branch_on_merge"`
				DeploymentsURL      string    `json:"deployments_url"`
				Description         string    `json:"description"`
				Disabled            bool      `json:"disabled"`
				DownloadsURL        string    `json:"downloads_url"`
				EventsURL           string    `json:"events_url"`
				Fork                bool      `json:"fork"`
				Forks               int       `json:"forks"`
				ForksCount          int       `json:"forks_count"`
				ForksURL            string    `json:"forks_url"`
				FullName            string    `json:"full_name"`
				GitCommitsURL       string    `json:"git_commits_url"`
				GitRefsURL          string    `json:"git_refs_url"`
				GitTagsURL          string    `json:"git_tags_url"`
				GitURL              string    `json:"git_url"`
				HasDiscussions      bool      `json:"has_discussions"`
				HasDownloads        bool      `json:"has_downloads"`
				HasIssues           bool      `json:"has_issues"`
				HasPages            bool      `json:"has_pages"`
				HasProjects         bool      `json:"has_projects"`
				HasWiki             bool      `json:"has_wiki"`
				Homepage            string    `json:"homepage"`
				HooksURL            string    `json:"hooks_url"`
				HTMLURL             string    `json:"html_url"`
				ID                  int       `json:"id"`
				IsTemplate          bool      `json:"is_template"`
				IssueCommentURL     string    `json:"issue_comment_url"`
				IssueEventsURL      string    `json:"issue_events_url"`
				IssuesURL           string    `json:"issues_url"`
				KeysURL             string    `json:"keys_url"`
				LabelsURL           string    `json:"labels_url"`
				Language            string    `json:"language"`
				LanguagesURL        string    `json:"languages_url"`
				License             struct {
					Key    string `json:"key"`
					Name   string `json:"name"`
					NodeID string `json:"node_id"`
					SpdxID string `json:"spdx_id"`
					URL    string `json:"url"`
				} `json:"license"`
				MergeCommitMessage string      `json:"merge_commit_message"`
				MergeCommitTitle   string      `json:"merge_commit_title"`
				MergesURL          string      `json:"merges_url"`
				MilestonesURL      string      `json:"milestones_url"`
				MirrorURL          interface{} `json:"mirror_url"`
				Name               string      `json:"name"`
				NodeID             string      `json:"node_id"`
				NotificationsURL   string      `json:"notifications_url"`
				OpenIssues         int         `json:"open_issues"`
				OpenIssuesCount    int         `json:"open_issues_count"`
				Owner              struct {
					AvatarURL         string `json:"avatar_url"`
					EventsURL         string `json:"events_url"`
					FollowersURL      string `json:"followers_url"`
					FollowingURL      string `json:"following_url"`
					GistsURL          string `json:"gists_url"`
					GravatarID        string `json:"gravatar_id"`
					HTMLURL           string `json:"html_url"`
					ID                int    `json:"id"`
					Login             string `json:"login"`
					NodeID            string `json:"node_id"`
					OrganizationsURL  string `json:"organizations_url"`
					ReceivedEventsURL string `json:"received_events_url"`
					ReposURL          string `json:"repos_url"`
					SiteAdmin         bool   `json:"site_admin"`
					StarredURL        string `json:"starred_url"`
					SubscriptionsURL  string `json:"subscriptions_url"`
					Type              string `json:"type"`
					URL               string `json:"url"`
				} `json:"owner"`
				Private                   bool          `json:"private"`
				PullsURL                  string        `json:"pulls_url"`
				PushedAt                  time.Time     `json:"pushed_at"`
				ReleasesURL               string        `json:"releases_url"`
				Size                      int           `json:"size"`
				SquashMergeCommitMessage  string        `json:"squash_merge_commit_message"`
				SquashMergeCommitTitle    string        `json:"squash_merge_commit_title"`
				SSHURL                    string        `json:"ssh_url"`
				StargazersCount           int           `json:"stargazers_count"`
				StargazersURL             string        `json:"stargazers_url"`
				StatusesURL               string        `json:"statuses_url"`
				SubscribersURL            string        `json:"subscribers_url"`
				SubscriptionURL           string        `json:"subscription_url"`
				SvnURL                    string        `json:"svn_url"`
				TagsURL                   string        `json:"tags_url"`
				TeamsURL                  string        `json:"teams_url"`
				Topics                    []interface{} `json:"topics"`
				TreesURL                  string        `json:"trees_url"`
				UpdatedAt                 time.Time     `json:"updated_at"`
				URL                       string        `json:"url"`
				UseSquashPrTitleAsDefault bool          `json:"use_squash_pr_title_as_default"`
				Visibility                string        `json:"visibility"`
				Watchers                  int           `json:"watchers"`
				WatchersCount             int           `json:"watchers_count"`
				WebCommitSignoffRequired  bool          `json:"web_commit_signoff_required"`
			} `json:"repo"`
			Sha  string `json:"sha"`
			User struct {
				AvatarURL         string `json:"avatar_url"`
				EventsURL         string `json:"events_url"`
				FollowersURL      string `json:"followers_url"`
				FollowingURL      string `json:"following_url"`
				GistsURL          string `json:"gists_url"`
				GravatarID        string `json:"gravatar_id"`
				HTMLURL           string `json:"html_url"`
				ID                int    `json:"id"`
				Login             string `json:"login"`
				NodeID            string `json:"node_id"`
				OrganizationsURL  string `json:"organizations_url"`
				ReceivedEventsURL string `json:"received_events_url"`
				ReposURL          string `json:"repos_url"`
				SiteAdmin         bool   `json:"site_admin"`
				StarredURL        string `json:"starred_url"`
				SubscriptionsURL  string `json:"subscriptions_url"`
				Type              string `json:"type"`
				URL               string `json:"url"`
			} `json:"user"`
		} `json:"head"`
		HTMLURL             string        `json:"html_url"`
		ID                  int           `json:"id"`
		IssueURL            string        `json:"issue_url"`
		Labels              []interface{} `json:"labels"`
		Locked              bool          `json:"locked"`
		MaintainerCanModify bool          `json:"maintainer_can_modify"`
		MergeCommitSha      string        `json:"merge_commit_sha"`
		Mergeable           interface{}   `json:"mergeable"`
		MergeableState      string        `json:"mergeable_state"`
		Merged              bool          `json:"merged"`
		MergedAt            interface{}   `json:"merged_at"`
		MergedBy            interface{}   `json:"merged_by"`
		Milestone           interface{}   `json:"milestone"`
		NodeID              string        `json:"node_id"`
		Number              int           `json:"number"`
		PatchURL            string        `json:"patch_url"`
		Rebaseable          interface{}   `json:"rebaseable"`
		RequestedReviewers  []interface{} `json:"requested_reviewers"`
		RequestedTeams      []interface{} `json:"requested_teams"`
		ReviewCommentURL    string        `json:"review_comment_url"`
		ReviewComments      int           `json:"review_comments"`
		ReviewCommentsURL   string        `json:"review_comments_url"`
		State               string        `json:"state"`
		StatusesURL         string        `json:"statuses_url"`
		Title               string        `json:"title"`
		UpdatedAt           time.Time     `json:"updated_at"`
		URL                 string        `json:"url"`
		User                *struct {
			AvatarURL         string `json:"avatar_url"`
			EventsURL         string `json:"events_url"`
			FollowersURL      string `json:"followers_url"`
			FollowingURL      string `json:"following_url"`
			GistsURL          string `json:"gists_url"`
			GravatarID        string `json:"gravatar_id"`
			HTMLURL           string `json:"html_url"`
			ID                int    `json:"id"`
			Login             string `json:"login"`
			NodeID            string `json:"node_id"`
			OrganizationsURL  string `json:"organizations_url"`
			ReceivedEventsURL string `json:"received_events_url"`
			ReposURL          string `json:"repos_url"`
			SiteAdmin         bool   `json:"site_admin"`
			StarredURL        string `json:"starred_url"`
			SubscriptionsURL  string `json:"subscriptions_url"`
			Type              string `json:"type"`
			URL               string `json:"url"`
		} `json:"user"`
	} `json:"pull_request"`
	Repository *struct {
		AllowForking     bool      `json:"allow_forking"`
		ArchiveURL       string    `json:"archive_url"`
		Archived         bool      `json:"archived"`
		AssigneesURL     string    `json:"assignees_url"`
		BlobsURL         string    `json:"blobs_url"`
		BranchesURL      string    `json:"branches_url"`
		CloneURL         string    `json:"clone_url"`
		CollaboratorsURL string    `json:"collaborators_url"`
		CommentsURL      string    `json:"comments_url"`
		CommitsURL       string    `json:"commits_url"`
		CompareURL       string    `json:"compare_url"`
		ContentsURL      string    `json:"contents_url"`
		ContributorsURL  string    `json:"contributors_url"`
		CreatedAt        time.Time `json:"created_at"`
		DefaultBranch    string    `json:"default_branch"`
		DeploymentsURL   string    `json:"deployments_url"`
		Description      string    `json:"description"`
		Disabled         bool      `json:"disabled"`
		DownloadsURL     string    `json:"downloads_url"`
		EventsURL        string    `json:"events_url"`
		Fork             bool      `json:"fork"`
		Forks            int       `json:"forks"`
		ForksCount       int       `json:"forks_count"`
		ForksURL         string    `json:"forks_url"`
		FullName         string    `json:"full_name"`
		GitCommitsURL    string    `json:"git_commits_url"`
		GitRefsURL       string    `json:"git_refs_url"`
		GitTagsURL       string    `json:"git_tags_url"`
		GitURL           string    `json:"git_url"`
		HasDiscussions   bool      `json:"has_discussions"`
		HasDownloads     bool      `json:"has_downloads"`
		HasIssues        bool      `json:"has_issues"`
		HasPages         bool      `json:"has_pages"`
		HasProjects      bool      `json:"has_projects"`
		HasWiki          bool      `json:"has_wiki"`
		Homepage         string    `json:"homepage"`
		HooksURL         string    `json:"hooks_url"`
		HTMLURL          string    `json:"html_url"`
		ID               int       `json:"id"`
		IsTemplate       bool      `json:"is_template"`
		IssueCommentURL  string    `json:"issue_comment_url"`
		IssueEventsURL   string    `json:"issue_events_url"`
		IssuesURL        string    `json:"issues_url"`
		KeysURL          string    `json:"keys_url"`
		LabelsURL        string    `json:"labels_url"`
		Language         string    `json:"language"`
		LanguagesURL     string    `json:"languages_url"`
		License          struct {
			Key    string `json:"key"`
			Name   string `json:"name"`
			NodeID string `json:"node_id"`
			SpdxID string `json:"spdx_id"`
			URL    string `json:"url"`
		} `json:"license"`
		MergesURL        string      `json:"merges_url"`
		MilestonesURL    string      `json:"milestones_url"`
		MirrorURL        interface{} `json:"mirror_url"`
		Name             string      `json:"name"`
		NodeID           string      `json:"node_id"`
		NotificationsURL string      `json:"notifications_url"`
		OpenIssues       int         `json:"open_issues"`
		OpenIssuesCount  int         `json:"open_issues_count"`
		Owner            struct {
			AvatarURL         string `json:"avatar_url"`
			EventsURL         string `json:"events_url"`
			FollowersURL      string `json:"followers_url"`
			FollowingURL      string `json:"following_url"`
			GistsURL          string `json:"gists_url"`
			GravatarID        string `json:"gravatar_id"`
			HTMLURL           string `json:"html_url"`
			ID                int    `json:"id"`
			Login             string `json:"login"`
			NodeID            string `json:"node_id"`
			OrganizationsURL  string `json:"organizations_url"`
			ReceivedEventsURL string `json:"received_events_url"`
			ReposURL          string `json:"repos_url"`
			SiteAdmin         bool   `json:"site_admin"`
			StarredURL        string `json:"starred_url"`
			SubscriptionsURL  string `json:"subscriptions_url"`
			Type              string `json:"type"`
			URL               string `json:"url"`
		} `json:"owner"`
		Private                  bool          `json:"private"`
		PullsURL                 string        `json:"pulls_url"`
		PushedAt                 time.Time     `json:"pushed_at"`
		ReleasesURL              string        `json:"releases_url"`
		Size                     int           `json:"size"`
		SSHURL                   string        `json:"ssh_url"`
		StargazersCount          int           `json:"stargazers_count"`
		StargazersURL            string        `json:"stargazers_url"`
		StatusesURL              string        `json:"statuses_url"`
		SubscribersURL           string        `json:"subscribers_url"`
		SubscriptionURL          string        `json:"subscription_url"`
		SvnURL                   string        `json:"svn_url"`
		TagsURL                  string        `json:"tags_url"`
		TeamsURL                 string        `json:"teams_url"`
		Topics                   []interface{} `json:"topics"`
		TreesURL                 string        `json:"trees_url"`
		UpdatedAt                time.Time     `json:"updated_at"`
		URL                      string        `json:"url"`
		Visibility               string        `json:"visibility"`
		Watchers                 int           `json:"watchers"`
		WatchersCount            int           `json:"watchers_count"`
		WebCommitSignoffRequired bool          `json:"web_commit_signoff_required"`
	} `json:"repository"`
	Sender *struct {
		AvatarURL         string `json:"avatar_url"`
		EventsURL         string `json:"events_url"`
		FollowersURL      string `json:"followers_url"`
		FollowingURL      string `json:"following_url"`
		GistsURL          string `json:"gists_url"`
		GravatarID        string `json:"gravatar_id"`
		HTMLURL           string `json:"html_url"`
		ID                int    `json:"id"`
		Login             string `json:"login"`
		NodeID            string `json:"node_id"`
		OrganizationsURL  string `json:"organizations_url"`
		ReceivedEventsURL string `json:"received_events_url"`
		ReposURL          string `json:"repos_url"`
		SiteAdmin         bool   `json:"site_admin"`
		StarredURL        string `json:"starred_url"`
		SubscriptionsURL  string `json:"subscriptions_url"`
		Type              string `json:"type"`
		URL               string `json:"url"`
	} `json:"sender"`
}

func Lookup() (ok bool, event *Event, err error) {
	path, ok := os.LookupEnv("GITHUB_EVENT_PATH")
	if !ok {
		return false, nil, nil
	}

	f, err := os.Open(path)
	if err != nil {
		return false, nil, err
	}

	defer func() { _ = f.Close() }()

	var ev Event
	if err = json.NewDecoder(f).Decode(&ev); err != nil {
		return false, nil, err
	}

	return true, &ev, nil
}
